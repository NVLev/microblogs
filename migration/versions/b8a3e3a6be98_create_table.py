"""create table

Revision ID: b8a3e3a6be98
Revises: 
Create Date: 2024-11-09 19:05:38.821091

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b8a3e3a6be98"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("api_key", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("api_key", name=op.f("uq_users_api_key")),
        sa.UniqueConstraint("name", name=op.f("uq_users_name")),
    )
    op.create_table(
        "follow",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("follower_id", sa.Integer(), nullable=False),
        sa.Column("following_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["follower_id"], ["users.id"], name=op.f("fk_follow_follower_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["following_id"], ["users.id"], name=op.f("fk_follow_following_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_follow")),
    )
    op.create_table(
        "tweets",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("content", sa.String(length=280), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_tweets_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tweets")),
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("url", sa.String(length=255), nullable=False),
        sa.Column("tweet_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tweet_id"], ["tweets.id"], name=op.f("fk_images_tweet_id_tweets")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_images")),
    )
    op.create_table(
        "likes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tweet_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tweet_id"], ["tweets.id"], name=op.f("fk_likes_tweet_id_tweets")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_likes_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_likes")),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("likes")
    op.drop_table("images")
    op.drop_table("tweets")
    op.drop_table("follow")
    op.drop_table("users")
    # ### end Alembic commands ###
